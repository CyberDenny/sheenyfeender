name: Auto Version and Release

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'gradle.properties'

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip version]')"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Auto bump version and update latest release
      run: |
        # Read current version
        CURRENT_VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
        echo "Current version: $CURRENT_VERSION"
        
        # Extract version parts
        IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
        
        # Increment patch version
        NEW_PATCH=$((PATCH + 1))
        
        # If patch reaches 10, increment minor and reset patch
        if [ $NEW_PATCH -ge 10 ]; then
          NEW_MINOR=$((MINOR + 1))
          NEW_PATCH=0
          echo "Patch reached 10, incrementing minor version"
        else
          NEW_MINOR=$MINOR
        fi
        
        # If minor reaches 10, increment major and reset minor
        if [ $NEW_MINOR -ge 10 ]; then
          NEW_MAJOR=$((MAJOR + 1))
          NEW_MINOR=0
          echo "Minor reached 10, incrementing major version"
        else
          NEW_MAJOR=$MAJOR
        fi
        
        NEW_VERSION="$NEW_MAJOR.$NEW_MINOR.$NEW_PATCH"
        echo "New version: $NEW_VERSION"
        
        # Update gradle.properties
        sed -i "s/mod_version=.*/mod_version=$NEW_VERSION/" gradle.properties
        
        # Update fabric.mod.json
        sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" src/main/resources/fabric.mod.json
        
        # Commit version bump
        git add gradle.properties src/main/resources/fabric.mod.json
        git commit -m "Auto bump version to $NEW_VERSION [skip version]"
        
        # Build the mod
        chmod +x ./gradlew
        ./gradlew build
        
        # Create and push tag (but we'll use "latest" for the release)
        git tag "v$NEW_VERSION"
        git push origin main
        git push origin "v$NEW_VERSION"
        
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        
    - name: List build artifacts
      run: |
        echo "Build artifacts:"
        ls -la build/libs/
        
    - name: Create or Update Latest Release
      uses: joutvhu/create-release@v1.0.1
      with:
        tag_name: latest
        release_name: Shiny Finder - Latest Version
        draft: false
        prerelease: false
        body: |
          ## Shiny Finder - Latest Version (v${{ env.NEW_VERSION }})
          
          This is the latest version of Shiny Finder. This release is automatically updated whenever new changes are pushed.
          
          ### Installation
          1. Download the `shinyfinder-${{ env.NEW_VERSION }}.jar` file below
          2. Place it in your mods folder
          3. Make sure you have Fabric Loader, Fabric API, and Cobblemon installed
          4. Launch Minecraft and enjoy!
          
          ### Requirements
          - Minecraft 1.21.1
          - Fabric Loader 0.16.14+
          - Fabric API
          - Cobblemon (for Pokemon detection)
          
          ### Features
          - Automatically detects shiny Pokemon in your area
          - Configurable scan radius and interval
          - Sound and visual alerts
          - In-game configuration GUI
          - Auto-start when joining worlds
        files: |
          build/libs/*.jar
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN || secrets.GITHUB_TOKEN }}
